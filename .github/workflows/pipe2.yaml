name: CI - Pipeline

on:
  pull_request:
    branches: ["main"]
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-rc"
    branches:
      - "main"
  
# if: ${{ startsWith(github.event.ref, 'refs/tags/v') && endsWith(github.event.ref, '-rc') }}
#Staging
# if: ${{ startsWith(github.event.ref, 'refs/tags/v') && !endsWith(github.event.ref, '-rc') }}
# Prod or Beta

jobs:
  pre-work:
    name: Setup environment
    runs-on: ubuntu-latest

    steps:

      - name: Setup environment Variables
        id: set-vars
        shell: bash
        run: |
          RC_REGEX='v[0-9].[0-9].[0-9]-rc'
          VERSION_REGEX='^v[0-9].[0-9].[0-9]$'
          if [ ${{ github.event.ref }} == 'refs/heads/main' ]; then
            echo APP_VERSION=$GITHUB_SHA >> $GITHUB_OUTPUT
            echo ENVIRONMENT=sandbox >> $GITHUB_OUTPUT
            echo ${GITHUB_REF#refs/*/}
          elif [ ${GITHUB_REF#refs/*/} =~ $RC_REGEX ]; then
            echo APP_VERSION=${{ github.event.ref }} >> $GITHUB_OUTPUT
            echo ENVIRONMENT=staging >> $GITHUB_OUTPUT
          elif [ ${GITHUB_REF#refs/*/} =~ $VERSION_REGEX ]; then
            echo APP_VERSION=${{ github.event.ref }} >> $GITHUB_OUTPUT
            echo ENVIRONMENT=beta >> $GITHUB_OUTPUT
          else
            echo APP_VERSION=erro >> $GITHUB_OUTPUT
            echo ENVIRONMENT=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT
          fi
              
    outputs:
      app_version: ${{ steps.set-vars.outputs.APP_VERSION }}
      environment: ${{ steps.set-vars.outputs.ENVIRONMENT }}
      
  result:
    needs: [pre-work]
    name: show result
    runs-on: ubuntu-latest
    
    steps:

      - name: Results
        id: set-vars
        shell: bash
        run: |
          echo ${{ needs.pre-work.outputs.app_version }}
          echo ${{ needs.pre-work.outputs.environment }}
  
